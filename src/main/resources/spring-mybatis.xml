<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                         http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 自动扫描 -->  
     <context:component-scan base-package="com.zt" />
    
    <!-- 事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    
    
    
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />
    </bean>   
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}"/>
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${maxActive}"/>
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${maxIdle}"/>
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${minIdle}"/>
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${maxWait}"/>
        
        <!-- 验证连接是否可用的查询语句 -->
		<property name="validationQuery" value="SELECT 1" />
		<!-- 每次租用连接时验证 -->
		<property name="testOnBorrow" value="false" />
		<!-- 每次归还连接时验证 -->
		<property name="testOnReturn" value="false" />
		<!-- 定时验证空闲连接 -->
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
		<property name="numTestsPerEvictionRun" value="${maxIdle}" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 回收abandoned连接超时时间，单位是秒（即强制结束一定时间内未归还的连接） -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 在回收连接时输出日志 -->
		<property name="logAbandoned" value="true" />
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/zt/dao/mapping/*.xml"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.zt.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>  
  
</beans>  