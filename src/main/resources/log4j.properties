log4j.rootLogger=INFO,Console,File,FileErr

log4j.logger.com.yundou=TRACE
#log4j.logger.com.yundou.base.aop=INFO
log4j.logger.com.yundou.base.dao=DEBUG
log4j.logger.org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping=WARN
#log4j.logger.org.springframework.web.context.support=TRACE

# 定义日志输出目的地为控制台 
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
# 可以灵活地指定日志输出格式，下面一行是指定具体的格式 
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH\:mm\:ss.SSS} %t %-5p [%c] %m%n

# 文件大小到达指定尺寸的时候产生一个新的文件 
log4j.appender.File=org.apache.log4j.RollingFileAppender
# 指定输出目录 
#log4j.appender.File.File=${cataline.base}/yundou-logs/yundou.log
# 定义文件最大大小 
log4j.appender.File.MaxFileSize=10MB
log4j.appender.File.maxBackupIndex=999
# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志 
log4j.appender.File.Threshold=ALL
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=%d{yyyy-MM-dd HH\:mm\:ss.SSS} %t %-5p [%c] %m%n

# 文件大小到达指定尺寸的时候产生一个新的文件 
log4j.appender.FileErr=org.apache.log4j.RollingFileAppender
# 指定输出目录 
#log4j.appender.FileErr.File=${cataline.base}/yundou-errs/yundou-err.log
# 定义文件最大大小 
log4j.appender.FileErr.MaxFileSize=10MB
log4j.appender.FileErr.maxBackupIndex=999
# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志 
log4j.appender.FileErr.Threshold=WARN
log4j.appender.FileErr.layout=org.apache.log4j.PatternLayout
log4j.appender.FileErr.layout.ConversionPattern=%n======================================================================%nTime     : %d{yyyy-MM-dd HH\:mm\:ss.SSS}%nLevel    : %p%nLogger   : %c%nLocation : %F:%L%nThread   : %t%nMessage  : %m%n
